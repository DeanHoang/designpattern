<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Demo.Api</name>
    </assembly>
    <members>
        <member name="M:Demo.Api.Controllers.CategoriesController.GetCategories">
            <summary>
            Get all categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.CategoriesController.GetCategory(System.Int32)">
            <summary>
            Get category by Id
            </summary>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.CategoriesController.AddCategory(Demo.Service.Models.CategoryModel)">
            <summary>
            Add a new Category
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.CategoriesController.UpdateCategory(System.Int32,Demo.Service.Models.CategoryModel)">
            <summary>
            Update an existing category
            </summary>
            <param name="id"></param>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.CategoriesController.DeleteCategory(System.Int32)">
            <summary>
            Delete a category
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.ProductController.GetProducts">
            <summary>
            Get all Products
            </summary>
            
            <response code="404">If result is not found.</response>
            <response code="400">If Invalid request .</response>
            
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.ProductController.GetProduct(System.Int32)">
            <summary>
            Get Product by Id
            </summary>
            <param name="id"></param>
            <response code="404">If result is not found.</response>
            <response code="400">If Invalid request .</response>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.ProductController.DeleteProduct(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="204">No content</response>
            <response code="201">Delete completely</response>
        </member>
        <member name="M:Demo.Api.Controllers.ProductController.AddProduct(Demo.Service.Models.ProductModel)">
            <summary>
            Add a new Product 
            </summary>
            <remarks>
            
            POST /Product
            {
              
                "name":"newProduct",
                
                "price":100,
                
                "NumInStock":10,
                
                "Description" : "A description for product"
            
                "IsAvailable": 1
                
              };
              
            </remarks>
            <param name="productModel"></param>
            <returns>New Created Product</returns>
            <response code="200">Returns the newly created product</response>
            <response code="400">Null Product</response>
        </member>
        <member name="M:Demo.Api.Controllers.ProductController.UpdateProduct(System.Int32,Demo.Service.Models.ProductModel)">
            <summary>
            Update a product
            </summary>
            <param name="id"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.UsersController.GetUsers">
            <summary>
            Get all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.UsersController.GetUser(System.Int32)">
            <summary>
            Get User By Id 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.UsersController.AddUser(Demo.Service.Models.UserModel)">
             <summary>
             Add a new User
             </summary>
            <remarks>
            
             POST /User
             {
             
                 "username":"newuser",
                 
                 "email":"newuser@email.com",
                 
                 "password":"12345678",
                 
                 "confirmpassword":"12345678",
                 
                 "role":"Member"
             }
             </remarks>
             <param name="user"></param>
             <returns>New Created User</returns>
             <response code="200">Returns the newly created user</response>
             <response code="400">Null User</response>
        </member>
        <member name="M:Demo.Api.Controllers.UsersController.DeleteUser(System.Int32)">
            <summary>
            Delete a User
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Demo.Api.Controllers.UsersController.UpdateUser(System.Int32,Demo.Service.Models.UserModel)">
            <summary>
            Update an existing User
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
    </members>
</doc>
